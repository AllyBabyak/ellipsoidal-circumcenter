using EllipsoidCircumcenter;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace EllipsoidCircumcenterTests
{
    [TestClass]
    public class UnitTesting
    {
        public void DegreesCircumcenter_FromDataRowTest(string testName, string point1S, string point2S, string point3S)
        {
            var target = new Coordinates();

            Console.WriteLine(testName);

            Coordinates.GeodeticDegrees point1 = Coordinates.StringToDegrees(point1S);
            Coordinates.GeodeticDegrees point2 = Coordinates.StringToDegrees(point2S);
            Coordinates.GeodeticDegrees point3 = Coordinates.StringToDegrees(point3S);

            Coordinates.GeodeticDegrees center = Coordinates.DegreesCircumcenter(point1, point2, point3);

            double error = VincentyError.ErrorDegrees(point1, point2, point3, center);

            Coordinates.GeodeticDegrees sphericalCenter = VincentyError.SphericalCircumcenterDegrees(point1, point2, point3);
            double errorSpherical = VincentyError.ErrorDegrees(point1, point2, point3, sphericalCenter);

            double errorDifference = errorSpherical - error; 
            double errorRatio = errorSpherical / error;

            double averageDistance = VincentyError.AverageDistanceDegrees(point1, point2, point3, center);

            Console.WriteLine("Point 1: " + Coordinates.DegreesToString(point1));
            Console.WriteLine("Point 2: " + Coordinates.DegreesToString(point2));
            Console.WriteLine("Point 3: " + Coordinates.DegreesToString(point3));
            Console.WriteLine("Center: " + Coordinates.DegreesToString(center));
            Console.WriteLine("The error is " + error.ToString() + " m, with an average distance of " + averageDistance.ToString() + " m.");
            Console.WriteLine("Spherical Center " + Coordinates.DegreesToString(sphericalCenter));
            Console.WriteLine("The error with the sperical model is " + errorSpherical.ToString() + " m.");
            Console.WriteLine("The difference of these errors is " + errorDifference.ToString() + " m.");
            Console.WriteLine("The ratio of these errors is " + errorRatio.ToString());

            Assert.IsFalse(errorSpherical + 10e-4 < error);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(0.0077068246863240455, -0.00470046099479711)", "(-0.0022905309496805814, 0.008690253820838918)", "(0.0043973788465079214, 0.007849720546396623)")]
        [DataRow("2. 5 km", "(-0.009244926033392125, -0.043967007091385235)", "(0.029587298511482344, 0.03396613156320144)", "(0.031338945121157195, 0.03237901571587239)")]
        [DataRow("3. 10 km", "(0.08286880702485323, 0.03597339436949497)", "(-0.08978439902943187, 0.010770874160041508)", "(0.07497340238416308, -0.05023633625309029)")]
        [DataRow("4. 50 km", "(0.40561750819710335, 0.1985262573917147)", "(-0.4081660313880702, 0.19330381891045623)", "(0.1603218542913267, 0.419979663865346)")]
        [DataRow("5. 100 km", "(-0.23619943569386767, -0.867138311639438)", "(-0.838876443613104, 0.33563714140322576)", "(-0.39745081826619055, -0.8069209009467335)")]
        [DataRow("6. 500 km", "(1.05927095190797, -4.36684470703526)", "(1.8016954376052605, 4.12031626633359)", "(-3.92305480051718, -2.2352894932681107)")]
        [DataRow("7. 1000 km", "(-8.76362133062879, -2.224227976290099)", "(7.693669192417124, -4.7351140126916045)", "(2.751340417751879, 8.560613344239286)")]
        public void DegreesCircumcenter_InternationalDateLine(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-0.006049765115058726, 46.006677253570494)", "(-0.008781425336715819, 46.002147649592125)", "(-0.0019871488318727827, 45.99123638396387)")]
        [DataRow("2. 5 km", "(0.0011188195804189228, 45.95509798645288)", "(-0.013743777753033095, 46.04279082834092)", "(0.043907905236799605, 46.01073510721423)")]
        [DataRow("3. 10 km", "(-0.05207599033302999, 46.073443728364076)", "(-0.0044902606264552525, 46.08972073405332)", "(0.0772598683442316, 45.95330678317122)")]
        [DataRow("4. 50 km", "(0.28126974408852795, 45.648309109610274)", "(-0.06555070333806792, 46.44441322611395)", "(-0.12025741653920081, 45.56701733355578)")]
        [DataRow("5. 100 km", "(-0.8993246569445493, 46.09473689864842)", "(-0.9043655540099736, 46.001837785930704)", "(0.002953122111943605, 46.898310495226454)")]
        [DataRow("6. 500 km", "(-2.49765000499376, 42.254603818546386)", "(-1.9001420389434165, 41.92349121264364)", "(-4.23067667321763, 44.41307432620064)")]
        [DataRow("7. 1000 km", "(-3.011451386814074, 37.525636393856196)", "(-4.551958620101439, 53.7703742808867)", "(8.93753725904225, 47.373173703851876)")]
        public void DegreesCircumcenter_Equator(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(89.99403316054335, 124.3144386967292)", "(89.98591642260565, 101.22886231575818)", "(89.99566887448468, 125.53633603843195)")]
        [DataRow("2. 5 km", "(89.9524030441076, -5.678861145697663)", "(89.9544401613476, 141.13396145629784)", "(89.96490301902502, 225.2417189706819)")]
        [DataRow("3. 10 km", "(89.91917026623176, 210.7645329022517)", "(89.9189940345985, -84.67620260493156)", "(89.90392881405262, 108.85466275008183)")]
        [DataRow("4. 50 km", "(89.55009813816186, 138.37921715430014)", "(89.55092496021929, 143.189324418965)", "(89.55972682991765, -75.11764209324143)")]
        [DataRow("5. 100 km", "(89.09502021239946, 47.41845381203752)", "(89.10712264078036, -41.74104896149257)", "(89.11392632582778, -95.2701034724413)")]
        [DataRow("6. 500 km", "(85.5273639411321, 175.38819568064434)", "(85.51829668980716, 121.36303462727123)", "(85.51954155439255, 129.34124175181492)")]
        [DataRow("7. 1000 km", "(81.03818706975404, 98.55175775659062)", "(81.03946272598252, 14.523246164349722)", "(81.03853700685836, 22.207249441509436)")]
        public void DegreesCircumcenter_NearNorthPole(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-0.0029354890345985453, 55.99247251645218)", "(0.0020082166378266636, 55.99101685086097)", "(0.0055370920218793095, 55.991732415327284)")]
        [DataRow("2. 5 km", "(-0.03690425998368086, 56.02289274954086)", "(-0.03833257252328106, 55.979692052646655)", "(0.007499154356464216, 56.044582381269095)")]
        [DataRow("3. 10 km", "(-0.08576249322313124, 55.97831574853661)", "(-0.0664478578348107, 55.9412879394806)", "(-0.07342236540390838, 56.049568820511745)")]
        [DataRow("4. 50 km", "(-0.39574175018447383, 56.21367125729366)", "(-0.09193855796315895, 56.43935867763931)", "(0.36191564670209625, 56.271905495268044)")]
        [DataRow("5. 100 km", "(0.38433033298711616, 56.81409719682664)", "(-0.899211959068405, 55.92502018568833)", "(-0.21191805899849872, 55.12717501618508)")]
        [DataRow("6. 500 km", "(0.4442054796118522, 51.529908059961315)", "(-4.351976857066381, 57.21332166767578)", "(-1.1433586044063708, 60.34538839128875)")]
        [DataRow("7. 1000 km", "(-8.627398980020155, 58.69583908400483)", "(7.097019817797417, 61.58417535405874)", "(-8.865646784495024, 57.76731515773428)")]
        public void DegreesCircumcenter_NearEquatorNorth(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(39.99362094011887, -99.99173378860056)", "(39.992488714225225, -99.9935391449421)", "(40.00546066569551, -99.99068726018812)")]
        [DataRow("2. 5 km", "(39.96346573057968, -99.96577854962548)", "(39.977964675941685, -100.05105495594293)", "(40.00041938980517, -99.94145012427201)")]
        [DataRow("3. 10 km", "(40.09004810835639, -99.99798765978048)", "(40.03462036559312, -99.8918660564209)", "(40.0792092340584, -99.94423825238593)")]
        [DataRow("4. 50 km", "(40.18264455990227, -100.53591238185565)", "(39.90402341656765, -99.42832979887898)", "(40.34130696102913, -100.38289429076464)")]
        [DataRow("5. 100 km", "(40.33358558227412, -101.09041775750467)", "(39.100939416639946, -99.93002910229782)", "(39.327278574432164, -99.22511459197487)")]
        [DataRow("6. 500 km", "(43.62087844943176, -103.57749115900005)", "(43.82927392042252, -96.82922764369654)", "(41.522186771167526, -94.42570552622182)")]
        [DataRow("7. 1000 km", "(48.376183236416836, -104.5905202054096)", "(42.573770852207076, -88.5490104984518)", "(35.36113937491743, -109.73008030248302)")]
        public void DegreesCircumcenter_NorthernHemisphere1(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(84.99155365756795, 40.03406151759989)", "(84.99200242345867, 40.04615324492624)", "(85.00293362364525, 40.09708537492961)")]
        [DataRow("2. 5 km", "(84.95538862968877, 39.957166195644284)", "(84.97075405910029, 39.61224057508985)", "(84.98647737290332, 39.51101281009646)")]
        [DataRow("3. 10 km", "(84.91591139925315, 39.65003066978696)", "(84.94313393672199, 40.78903223420204)", "(85.00537347980307, 41.025985183695205)")]
        [DataRow("4. 50 km", "(85.19874165343548, 35.30214865578763)", "(84.93514213913015, 45.05124166643629)", "(84.82832955807267, 44.66581843699053)")]
        [DataRow("5. 100 km", "(84.17767499331649, 36.23210529132292)", "(85.78660330161885, 45.34646604542918)", "(85.8763159201367, 42.32036895450116)")]
        [DataRow("6. 500 km", "(80.54619321056158, 36.17633960043997)", "(80.87823229249148, 54.906900397016784)", "(82.80392157023051, 78.01774164741809)")]
        [DataRow("7. 1000 km", "(76.62035760590688, 17.656884531333564)", "(82.57416468351146, -50.12477329797052)", "(85.31463999495769, -95.1828447038723)")]
        public void DegreesCircumcenter_NorthernHemisphere2(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(15.008017546550375, 169.9957087640539)", "(15.008088337483287, 170.00414823771553)", "(15.009006258970361, 170.00077369571244)")]
        [DataRow("2. 5 km", "(15.030674406808881, 170.03414020937572)", "(14.967060184697683, 169.96817699314937)", "(15.044914938551871, 170.0051030133078)")]
        [DataRow("3. 10 km", "(14.910809648863323, 169.98498910358975)", "(14.956177999190341, 170.08130968689997)", "(15.080572609655436, 170.04212424888226)")]
        [DataRow("4. 50 km", "(15.395632022167757, 170.22482269274334)", "(14.549350024521203, 169.96563167591538)", "(14.867270220122371, 170.44425463522376)")]
        [DataRow("5. 100 km", "(14.236715290505636, 169.5029632986865)", "(15.83797400654871, 169.65113507154587)", "(15.77212267184906, 169.51593878377162)")]
        [DataRow("6. 500 km", "(18.699900800434442, 167.3067651524003)", "(19.160512718100698, 168.16833252801388)", "(10.535444528739644, 169.28329329810228)")]
        [DataRow("7. 1000 km", "(7.772458612988335, 164.49239158148217)", "(10.573027826343061, 161.96746768724836)", "(5.961471291404445, 170.19115983555238)")]
        public void DegreesCircumcenter_NorthernHemisphere3(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-89.98564467581993, 185.10512901224314)", "(-89.98126584393383, 155.24372212284922)", "(-89.99650249328874, 84.29346598365804)")]
        [DataRow("2. 5 km", "(-89.96110296474411, 267.16822556021924)", "(-89.96255380385458, 279.05979761584075)", "(-89.94674869779001, 118.03134123072672)")]
        [DataRow("3. 10 km", "(-89.91222910310803, 50.06436280556468)", "(-89.91953071129294, -6.508255477086024)", "(-89.90083165110306, 161.6760836258468)")]
        [DataRow("4. 50 km", "(-89.54700955920647, 89.79902011597923)", "(-89.55311714824371, 53.22520116046726)", "(-89.54364842791968, 117.75977875872073)")]
        [DataRow("5. 100 km", "(-89.10061301958723, 212.6197887327494)", "(-89.09661192915179, 111.11389948617823)", "(-89.09613727044767, 177.99505747840482)")]
        [DataRow("6. 500 km", "(-85.52846162574932, 267.452987371895)", "(-85.52287753360646, 234.0292017111214)", "(-85.51421979054366, 170.5639690285197)")]
        [DataRow("7. 1000 km", "(-81.03623777928487, 150.61871464122848)", "(-81.0451089890792, 230.58970413210753)", "(-81.0380573393606, 182.28613169577875)")]
        public void DegreesCircumcenter_NearSouthPole(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(0.006318134745604995, 13.994722076423486)", "(0.004684830327608963, 13.993013517069757)", "(-0.007574370516839629, 14.006168580092492)")]
        [DataRow("2. 5 km", "(0.04411934921310843, 14.002971457277491)", "(0.026004492797340188, 13.963973432388734)", "(-0.04613256081850873, 14.002766421686683)")]
        [DataRow("3. 10 km", "(-0.08359980134253014, 14.036578728738622)", "(-0.01994542129283055, 14.087838285041876)", "(-0.0733887381901745, 13.946153085081868)")]
        [DataRow("4. 50 km", "(-0.09377890444569383, 13.560398250589124)", "(0.44932710360053646, 14.040663949931458)", "(0.45081284434430086, 14.018195079540476)")]
        [DataRow("5. 100 km", "(-0.7969075853708686, 14.42657230423924)", "(-0.7309078373495415, 14.53040336474108)", "(-0.8970178332607024, 13.878208128135096)")]
        [DataRow("6. 500 km", "(2.127034195630262, 17.96399842858413)", "(-1.3969690810155626, 18.272601298035575)", "(4.103783328485176, 15.885544915101075)")]
        [DataRow("7. 1000 km", "(0.8341651493265607, 5.054919865155985)", "(-8.436270364671778, 17.24936037737741)", "(4.497516440610058, 21.800892157882863)")]
        public void DegreesCircumcenter_NearEquatorSouth(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-29.99152714479288, 45.00355758804624)", "(-30.004733495793374, 44.99117702952357)", "(-30.009012882401834, 44.999560453895185)")]
        [DataRow("2. 5 km", "(-30.04034808835578, 45.023168070119205)", "(-30.004532109444387, 45.05155975935095)", "(-30.033041271052312, 44.964718598086925)")]
        [DataRow("3. 10 km", "(-29.91346371479049, 45.02926543912684)", "(-30.047875694399888, 45.0878626360594)", "(-30.033637429937116, 45.09618324568313)")]
        [DataRow("4. 50 km", "(-29.842314216887264, 45.48512807893535)", "(-29.692700403599037, 45.37875854099532)", "(-29.977269326647573, 45.5174914728082)")]
        [DataRow("5. 100 km", "(-30.569425516123566, 45.80614393345881)", "(-30.213736176620888, 43.99200845652728)", "(-29.57817309948963, 44.08578453378205)")]
        [DataRow("6. 500 km", "(-28.305305235127236, 49.76322979568314)", "(-31.818398757224397, 40.2128050937594)", "(-33.66455863230096, 48.0789814734054)")]
        [DataRow("7. 1000 km", "(-37.32270761490062, 51.300645352875144)", "(-36.970320568714705, 38.164250890542526)", "(-38.614353830771456, 48.209286229453305)")]
        public void DegreesCircumcenter_SouthernHemisphere1(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-77.99854292725607, -78.0424918244411)", "(-78.00574824423568, -78.0330368095298)", "(-77.99292349147078, -78.02639449904375)")]
        [DataRow("2. 5 km", "(-77.95680269295478, -77.94327320499511)", "(-78.0049976369906, -77.78596075634913)", "(-78.03998900839505, -78.09711072262365)")]
        [DataRow("3. 10 km", "(-77.9141333995864, -78.1221297293132)", "(-78.0284850172755, -77.59119990330704)", "(-77.95262297083065, -77.63520711770855)")]
        [DataRow("4. 50 km", "(-78.38785897721687, -76.90585365535352)", "(-78.241976844973, -76.1696428773947)", "(-78.01835952761101, -80.15333633509198)")]
        [DataRow("5. 100 km", "(-77.74372455828211, -82.08486457109083)", "(-78.17857464747603, -82.25255962540005)", "(-78.74141744304279, -80.49369467163308)")]
        [DataRow("6. 500 km", "(-80.5498815935815, -57.98551776389256)", "(-73.65340117762925, -73.52980464328499)", "(-82.41752842382712, -73.57934101453552)")]
        [DataRow("7. 1000 km", "(-70.39003599119661, -60.063101108510516)", "(-82.55052475157963, -29.66833647702402)", "(-77.33161743830357, -120.76023022543549)")]
        public void DegreesCircumcenter_SouthernHemisphere2(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }

        [DataTestMethod]
        [DataRow("1. 1 km", "(-4.991565605553838, 80.00325209393957)", "(-4.99847075227385, 80.0088873563651)", "(-4.998860711530611, 79.99105461870028)")]
        [DataRow("2. 5 km", "(-4.997823045113218, 80.04503382680619)", "(-5.003990737327302, 80.04491036931854)", "(-4.989842958514113, 80.04393354431828)")]
        [DataRow("3. 10 km", "(-5.0761554998367275, 80.04862768567038)", "(-4.938318312706964, 80.06593690537835)", "(-5.006870302478734, 79.91008776779732)")]
        [DataRow("4. 50 km", "(-5.016951342033852, 79.5494492682552)", "(-4.603041604906522, 80.21580409909248)", "(-5.280929009761146, 79.64664764070947)")]
        [DataRow("5. 100 km", "(-4.470318124354988, 80.7305682096085)", "(-5.493471166994245, 79.24407962089226)", "(-5.904028226664182, 80.02154908088063)")]
        [DataRow("6. 500 km", "(-5.406650805901106, 84.49177968907549)", "(-5.057561492585395, 84.50846002349286)", "(-8.444233088366635, 77.06980578493234)")]
        [DataRow("7. 1000 km", "(-13.96848399923404, 78.84727594518587)", "(-3.4828308288180523, 88.88029689191171)", "(-3.303905604567218, 71.15282469010782)")]
        public void DegreesCircumcenter_SouthernHemisphere3(string testName, string point1S, string point2S, string point3S)
        {
            DegreesCircumcenter_FromDataRowTest(testName, point1S, point2S, point3S);
        }
    }

}
